{
  "openapi": "3.0.4",
  "info": {
    "title": "P7CreateRestApi",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/login": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/bids": {
      "get": {
        "tags": [
          "Bid"
        ],
        "summary": "List all bids",
        "description": "Create a list of all bids present in the database",
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "A list of items was successfully retrieved."
          }
        }
      },
      "post": {
        "tags": [
          "Bid"
        ],
        "summary": "Add one bid",
        "description": "Create a new bid in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BidDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BidDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BidDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "201": {
            "description": "The item was successfully created."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          }
        }
      }
    },
    "/api/v1/bids/{bid_id}": {
      "get": {
        "tags": [
          "Bid"
        ],
        "summary": "Get one bid",
        "description": "Retrieve a specific bid in the database",
        "parameters": [
          {
            "name": "bid_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "The item was successfully retrieved."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "put": {
        "tags": [
          "Bid"
        ],
        "summary": "Update one bid",
        "description": "Update an existing bid stored in database",
        "parameters": [
          {
            "name": "bid_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BidDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BidDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BidDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully updated."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Bid"
        ],
        "summary": "Delete one bid",
        "description": "Delete a specific bid in the database",
        "parameters": [
          {
            "name": "bid_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully deleted."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      }
    },
    "/api/v1/curve-points": {
      "get": {
        "tags": [
          "CurvePoint"
        ],
        "summary": "List all curve points",
        "description": "Create a list of all curve points present in the database",
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "A list of items was successfully retrieved."
          }
        }
      },
      "post": {
        "tags": [
          "CurvePoint"
        ],
        "summary": "Add one curve point",
        "description": "Create a new curve point in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurvePointDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurvePointDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurvePointDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "201": {
            "description": "The item was successfully created."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          }
        }
      }
    },
    "/api/v1/curve-points/{curve_point_id}": {
      "get": {
        "tags": [
          "CurvePoint"
        ],
        "summary": "Get one curve point",
        "description": "Retrieve a specific curve point in the database",
        "parameters": [
          {
            "name": "curve_point_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "The item was successfully retrieved."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "put": {
        "tags": [
          "CurvePoint"
        ],
        "summary": "Update one curve point",
        "description": "Update an existing curve point stored in database",
        "parameters": [
          {
            "name": "curve_point_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurvePointDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurvePointDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurvePointDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully updated."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "CurvePoint"
        ],
        "summary": "Delete one curve point",
        "description": "Delete a specific curve point in the database",
        "parameters": [
          {
            "name": "curve_point_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully deleted."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      }
    },
    "/api/v1/ratings": {
      "get": {
        "tags": [
          "Rating"
        ],
        "summary": "List all ratings",
        "description": "Create a list of all ratings present in the database",
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "A list of items was successfully retrieved."
          }
        }
      },
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Add one rating",
        "description": "Create a new rating in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RatingDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "201": {
            "description": "The item was successfully created."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          }
        }
      }
    },
    "/api/v1/ratings/{rating_id}": {
      "get": {
        "tags": [
          "Rating"
        ],
        "summary": "Get one rating",
        "description": "Retrieve a specific rating in the database",
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "The item was successfully retrieved."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "put": {
        "tags": [
          "Rating"
        ],
        "summary": "Update one rating",
        "description": "Update an existing rating stored in database",
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RatingDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully updated."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Rating"
        ],
        "summary": "Delete one rating",
        "description": "Delete a specific rating in the database",
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully deleted."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      }
    },
    "/api/v1/rules": {
      "get": {
        "tags": [
          "Rule"
        ],
        "summary": "List all rules",
        "description": "Create a list of all rules present in the database",
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "A list of items was successfully retrieved."
          }
        }
      },
      "post": {
        "tags": [
          "Rule"
        ],
        "summary": "Add one rule",
        "description": "Create a new rule in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "201": {
            "description": "The item was successfully created."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          }
        }
      }
    },
    "/api/v1/rules/{rule_id}": {
      "get": {
        "tags": [
          "Rule"
        ],
        "summary": "Get one rule",
        "description": "Retrieve a specific rule in the database",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "The item was successfully retrieved."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "put": {
        "tags": [
          "Rule"
        ],
        "summary": "Update one rule",
        "description": "Update an existing rule stored in database",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully updated."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Rule"
        ],
        "summary": "Delete one rule",
        "description": "Delete a specific rule in the database",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully deleted."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      }
    },
    "/api/v1/trades": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "List all trades",
        "description": "Create a list of all trades present in the database",
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "A list of items was successfully retrieved."
          }
        }
      },
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "Add one trade",
        "description": "Create a new trade in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TradeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TradeDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "201": {
            "description": "The item was successfully created."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          }
        }
      }
    },
    "/api/v1/trades/{trade_id}": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Get one trade",
        "description": "Retrieve a specific trade in the database",
        "parameters": [
          {
            "name": "trade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "The item was successfully retrieved."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "put": {
        "tags": [
          "Trade"
        ],
        "summary": "Update one trade",
        "description": "Update an existing trade stored in database",
        "parameters": [
          {
            "name": "trade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TradeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TradeDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully updated."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Trade"
        ],
        "summary": "Delete one trade",
        "description": "Delete a specific trade in the database",
        "parameters": [
          {
            "name": "trade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully deleted."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List all users",
        "description": "Create a list of all users present in the database",
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "A list of items was successfully retrieved."
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add one user",
        "description": "Create a new user in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "201": {
            "description": "The item was successfully created."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get one user",
        "description": "Retrieve a specific user in the database",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "200": {
            "description": "The item was successfully retrieved."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update one user",
        "description": "Update an existing user stored in database",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully updated."
          },
          "400": {
            "description": "Bad Request. The request was invalid or cannot be served."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete one user",
        "description": "Delete a specific user in the database",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized. Authentication is required and has failed or has not yet been provided."
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. The user might not have the necessary permissions for a resource."
          },
          "500": {
            "description": "Internal Server Error along with the complete Error message."
          },
          "204": {
            "description": "The item was successfully deleted."
          },
          "404": {
            "description": "The item was not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BidDto": {
        "required": [
          "account",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "bidQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "askQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "benchmark": {
            "type": "string",
            "nullable": true
          },
          "bidDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commentary": {
            "type": "string",
            "nullable": true
          },
          "bidSecurity": {
            "type": "string",
            "nullable": true
          },
          "bidStatus": {
            "type": "string",
            "nullable": true
          },
          "trader": {
            "type": "string",
            "nullable": true
          },
          "book": {
            "type": "string",
            "nullable": true
          },
          "creationName": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revisionName": {
            "type": "string",
            "nullable": true
          },
          "revisionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dealName": {
            "type": "string",
            "nullable": true
          },
          "dealType": {
            "type": "string",
            "nullable": true
          },
          "sourceListId": {
            "type": "string",
            "nullable": true
          },
          "side": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurvePointDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "asOfDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "term": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "curvePointValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RatingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "moodys": {
            "type": "string",
            "nullable": true
          },
          "sandP": {
            "type": "string",
            "nullable": true
          },
          "fitch": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "json": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "type": "string",
            "nullable": true
          },
          "sqlStr": {
            "type": "string",
            "nullable": true
          },
          "sqlPart": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TradeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "buyQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sellQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "buyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sellPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tradeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tradeSecurity": {
            "type": "string",
            "nullable": true
          },
          "tradeStatus": {
            "type": "string",
            "nullable": true
          },
          "trader": {
            "type": "string",
            "nullable": true
          },
          "benchmark": {
            "type": "string",
            "nullable": true
          },
          "book": {
            "type": "string",
            "nullable": true
          },
          "creationName": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revisionName": {
            "type": "string",
            "nullable": true
          },
          "revisionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dealName": {
            "type": "string",
            "nullable": true
          },
          "dealType": {
            "type": "string",
            "nullable": true
          },
          "sourceListId": {
            "type": "string",
            "nullable": true
          },
          "side": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}